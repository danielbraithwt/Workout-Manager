<%= javascript_include_tag "jquery-2.1.1.min.js" %>
<%= javascript_include_tag "jquery-ui.min.js" %>
<%= stylesheet_link_tag "excersise_edit.css" %>

<script>

var workout_id = <%= @workout.id %>;
var current_group = <%= @workout.excersises.inject (0) { |memo, item| if item.group != nil && item.group > memo then item.group; else memo; end } %>

$(window).bind("load", function() {
		update_colors();
		});

$(document).scroll( function() {
		// Caclulate what current excersise the header is over
		var scrolled = $(document).scrollTop();
		var currentExcersise = parseInt(scrolled / 100);

		// Get the <a> tag containing the excersise we want
		var element = $("#excersises a:nth-child(" + (currentExcersise+1) + ")").get(0);

		if( $("#column_titles").css("background-color") != $("#excersise_" + element.id).css("background-color") )
		{
			// Set the color of the column header to the color of that excersise
			$("#column_titles").animate({backgroundColor: $("#excersise_" + element.id).css("background-color")});
		}
});

function update_colors()
{
	// Update the color of the header so it matches the first excersise background
	var first = $("#excersises").children("a").first();
	var first_group = document.getElementById("excersise_group_" + first.attr('id')).innerText;
	var rgb = HSBtoRGB(parseInt(first_group) * ( 100.0 / current_group ), 0.68, 0.7);

	//$("#header").animate({backgroundColor: "rgba(" + parseInt(rgb[0]) + ", " + parseInt(rgb[1]) + ", " + parseInt(rgb[2]) + ", 0.8)"});
	$("#column_titles").animate({backgroundColor: "rgb(" + parseInt(rgb[0]) + ", " + parseInt(rgb[1]) + ", " + parseInt(rgb[2]) + ")"});

	// Update the colors of the excersises
	$("#excersises").children("a").each(function() {
			var group = document.getElementById("excersise_group_" + this.id).innerText;

			var rgb = HSBtoRGB(parseInt(group) * ( 100.0 / current_group ), 0.68, 0.66);
			$("#excersise_"+this.id).animate({backgroundColor: "rgb(" + parseInt(rgb[0]) + ", " + parseInt(rgb[1]) + ", " + parseInt(rgb[2]) + ")"});
		});
}

function create_new_excersise()
{
	var xmlhttp;

	if( window.XMLHttpRequest )
	{
			xmlhttp = new XMLHttpRequest();
	}
	else
	{
		xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
	}

	xmlhttp.onreadystatechange = function()
	{
		if( xmlhttp.readyState == 4 && xmlhttp.status == 200 )
		{
			var id = xmlhttp.responseText.trim();

			// Create the span tag to align the text propperly
			var aligner = document.createElement('span');

			var excersises = document.getElementById("excersises");

			// Empty the div if there are 0 groups
			if( current_group == 0 ) excersises.innerHTML = "";

			// Increment the current group
			current_group += 1;

			var newA = document.createElement('a');
			newA.id = id;
			newA.addEventListener("change", edit_excersise_event);
			newA.addEventListener("keyup", edit_excersise_event);
				
			var excersiseContainer = document.createElement('div');
			excersiseContainer.addEventListener("focusout", update_colors);
			excersiseContainer.id = ("excersise_" + id);
			excersiseContainer.className = "excersise";

			var excersiseGroup = document.createElement('div');

			excersiseGroup.id = ("excersise_group_" + id);
			excersiseGroup.className = "excersise_group";
			excersiseGroup.innerText = current_group;
			excersiseGroup.contentEditable = 'true';

			// Create the span tag to align the text propperly
			var groupAligner = document.createElement('span');
			excersiseGroup.appendChild(groupAligner);

			excersiseContainer.appendChild(excersiseGroup);

			var excersiseName = document.createElement('div');
			excersiseName.id = ("excersise_name_" + id);
			excersiseName.className = "excersise_name";
			excersiseName.innerText = "Name";
			excersiseName.contentEditable = 'true';

			// Create the span tag to align the text propperly
			var nameAligner = document.createElement('span');

			excersiseName.appendChild(nameAligner);

			excersiseContainer.appendChild(excersiseName);

			var excersiseType = document.createElement('div');
			excersiseType.id = ("excersise_type_" + id);
			excersiseType.className = "excersise_type";

			var excersiseTypeSelect = document.createElement('select');
			excersiseTypeSelect.addEventListener("change", change_units_event);
			excersiseTypeSelect.id = ("excersise_type_select_" + id);
			excersiseTypeSelect.className = "excersise_type_select";

			var weightBasedOption = document.createElement('option');
			weightBasedOption.innerText = "Weight Based";
			excersiseTypeSelect.appendChild(weightBasedOption);

			var timeBasedOption = document.createElement('option');
			timeBasedOption.innerText = "Time Based";
			excersiseTypeSelect.appendChild(timeBasedOption);
			//excersiseType.innerText = "Type";
			//excersiseType.contentEditable = 'true';
			excersiseType.appendChild(excersiseTypeSelect);

			excersiseContainer.appendChild(excersiseType);

			var excersiseDiffculty = document.createElement('div');
			excersiseDiffculty.id = ("excersise_diffculty_" + id);
			excersiseDiffculty.className = "excersise_diffculty";

			var excersiseDiffcultyMagnitude = document.createElement('div');

			excersiseDiffcultyMagnitude.id = ("excersise_diffculty_magnitude_" + id);
			excersiseDiffcultyMagnitude.className = "excersise_diffculty_magnitude";
			excersiseDiffcultyMagnitude.innerText = "1.0";
			excersiseDiffcultyMagnitude.contentEditable = 'true';

			// Create the span tag to align the text propperly
			var magnitudeAligner = document.createElement('span');
			excersiseDiffcultyMagnitude.appendChild(magnitudeAligner);

			excersiseDiffculty.appendChild(excersiseDiffcultyMagnitude);

			var excersiseDiffcultyUnits = document.createElement('div');

			excersiseDiffcultyUnits.id = ("excersise_diffculty_units_" + id);
			excersiseDiffcultyUnits.class = "excersise_diffculty_units";
			excersiseDiffcultyUnits.innerText = "kg";

			// Create the span tag to align the text propperly
			var unitsAligner = document.createElement('span');
			excersiseDiffcultyUnits.appendChild(unitsAligner);

			excersiseDiffculty.appendChild(excersiseDiffcultyUnits);

			excersiseContainer.appendChild(excersiseDiffculty);

			var excersiseSets = document.createElement('div');

			excersiseSets.id = ("excersise_sets_" + id);
			excersiseSets.className = "excersise_sets";
			excersiseSets.innerText = "0";
			excersiseSets.contentEditable = 'true';

			// Create the span tag to align the text propperly
			var setsAligner = document.createElement('span');
			excersiseSets.appendChild(setsAligner);

			excersiseContainer.appendChild(excersiseSets);

			var excersiseReps = document.createElement('div');

			excersiseReps.id = ("excersise_reps_" + id);
			excersiseReps.className = "excersise_reps";
			excersiseReps.innerText = "0";
			excersiseReps.contentEditable = "true";

			// Create the span tag to align the text propperly
			var repsAligner = document.createElement('span');
			excersiseReps.appendChild(repsAligner);

			excersiseContainer.appendChild(excersiseReps);

			newA.appendChild(excersiseContainer);
			
			excersises.appendChild(newA);

			// Set the color of the newley created div
			var group = document.getElementById("excersise_group_" + id).innerText;

			var rgb = HSBtoRGB(parseInt(group) * ( 100.0 / current_group ), 0.68, 0.66);
			$("#excersise_"+id).animate({backgroundColor: "rgb(" + parseInt(rgb[0]) + ", " + parseInt(rgb[1]) + ", " + parseInt(rgb[2]) + ")"});
		}
	}

	xmlhttp.open("GET", "/excersises/create?workoutid=" + workout_id + "&group=" + (current_group+1), true);
	xmlhttp.send();
}

function edit_excersise_event(event)
{
	var s = event.srcElement.id.split("_");
	var id = s[s.length-1];

	edit_excersise(parseInt(id));
}

function edit_excersise(id)
{
	$("#column_titles").animate({backgroundColor: "#EEEEEE"});


	var group = document.getElementById("excersise_group_" + id).innerText;
	var name = document.getElementById("excersise_name_" + id).innerText;
	var type_select = document.getElementById("excersise_type_select_" + id);
	var type = 0;
	if( type_select[type_select.selectedIndex].value == "Weight Based" || type_select[type_select.selectedIndex].value == "Time Based")
	{
		type = type_select.selectedIndex + 1;	
	}
	var diffculty = document.getElementById("excersise_diffculty_magnitude_" + id).innerText;
	var sets = document.getElementById("excersise_sets_" + id).innerText;
	var reps = document.getElementById("excersise_reps_" + id).innerText;

	// AJAX For saving exversise
	var xmlhttp;

	if( window.XMLHttpRequest )
	{
		xmlhttp = new XMLHttpRequest();
	}
	else
	{
		xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
	}

	xmlhttp.onreadystatechange = function()
	{
		if( xmlhttp.readyState == 4 && xmlhttp.status == 200 )
		{
			// Dont need to do anything
		}
	}


	xmlhttp.open("GET", "/excersises/update?id=" + id + "&group=" + group + "&name=" + name + "&type=" + type + "&diffculty=" + diffculty + "&sets=" + sets + "&reps=" + reps, true);
	xmlhttp.send();
}

function change_units_event(event)
{
	var s = event.srcElement.id.split("_");
	var id = s[s.length-1];

	change_units(parseInt(id));
}

function change_units(id)
{
	var type_select = document.getElementById("excersise_type_select_" + id);

	if( type_select[type_select.selectedIndex].value == "Weight Based" )
	{
		document.getElementById("excersise_diffculty_units_" + id).innerHTML = "<span></span>kg";
	}
	else if(type_select[type_select.selectedIndex].value == "Time Based")
	{
		document.getElementById("excersise_diffculty_units_" + id).innerHTML = "<span></span>sec";
	}
}

function HSBtoRGB(h, s, l)
{
	var C = (1 - Math.abs(2 * l - 1)) * s;
	var Hp = h/60.0;
	var x = C * ( 1 - Math.abs(Hp%2 - 1));

	var r;
	var g;
	var b;

	if( Hp >= 0 && Hp < 1 )
	{
		r = C;
		g = x;
		b = 0;
	}
	else if( Hp >= 1 && Hp < 2 )
	{
		r = x;
		g = C;
		b = 0;
	}
	else if( Hp >= 2 && Hp < 3 )
	{
		r = 0;
		g = C;
		b = x;
	}
	else if( Hp >= 3 && Hp < 4 )
	{
		r = 0;
		g = x;
		b = C;
	}
	else if( Hp >= 4 && Hp < 5 )
	{
		r = x;
		g = 0;
		b = C;
	}	
	else if( Hp >= 5 && Hp < 6 )
	{
		r = C;
		g = 0;
		b = x;
	}

	m = l - (1/2.0) * C;

	return [255 * (r+m), 255 * (g+m), 255 * (b+m)];
}

</script>

<div id="container">
<div id="header">
	<div id="title">
		<a href="/">
			<div id="home">
				H
			</div>
		</a>

		<div id="workout_name">
			<%= @workout.name %>
		</div>
	</div>

	<div id="column_titles">
		<div id="excersise_group_header" class="excersise_group">
			<span></span>Group
		</div>

		<div id="excersise_name_header" class="excersise_name">
			<span></span>Name
		</div>

		<div id="excersise_type_header" class="excersise_type">
			<span></span>Type
		</div>

		<div id="excersise_diffculty_header" class="excersise_diffculty">
			<span></span>Diffculty
		</div>

		<div id="excersise_sets_header" class="excersise_sets">
			<span></span>Sets
		</div>

		<div id="excersise_reps_header" class="excersise_reps">
			<span></span>Reps
		</div>
	</div>

</div>

<div id="excersises">
	<% if @excersises.size == 0 %>
		<p>There are currently no excersises in this workout</p>
	<% else %>
		<% @excersises.each do |excersise| %>
			<a id="<%= excersise.id %>" onchange="edit_excersise(<%= excersise.id %>)" onkeyup="edit_excersise(<%= excersise.id %>)">
				<div id="excersise_<%= excersise.id %>" class="excersise" onfocusout="update_colors()">
					<div id="excersise_group_<%= excersise.id %>" class="excersise_group" contentEditable='true'>
						<span></span><%= excersise.group %>
					</div>

					<div id="excersise_name_<%= excersise.id %>" class="excersise_name" contentEditable='true'>
						<span></span><%= excersise.name %>
					</div>

					<div id="excersise_type_<%= excersise.id %>" class="excersise_type">
						<select id="excersise_type_select_<%= excersise.id %>" class="excersise_type_select" onchange="change_units(<%= excersise.id %>)">
							<option <%= if excersise.excersisetype == 1 then "selected='selected'"; end%>>Weight Based</option>
							<option <%= if excersise.excersisetype == 2 then "selected='selected'"; end%>>Time Based</option>
						</select>
					</div>

					<div id="excersise_diffculty_<%= excersise.id %>" class="excersise_diffculty">
						<div id="excersise_diffculty_magnitude_<%= excersise.id %>" class="excersise_diffculty_magnitude" contentEditable='true'>
							<span></span><%= excersise.diffculty %>
						</div>
						<div id="excersise_diffculty_units_<%= excersise.id %>" class="excersise_diffculty_units">
							<span></span><%= excersise.get_units %>
						</div>
					</div>

					<div id="excersise_sets_<%= excersise.id %>" class="excersise_sets" contentEditable='true'>
						<span></span><%= excersise.sets %>
					</div>

					<div id="excersise_reps_<%= excersise.id %>" class="excersise_reps" contentEditable='true'>
						<span></span><%= excersise.reps %>
					</div>

				</div>
			</a>
		<% end %>
	<% end %>
</div>

<a onclick="create_new_excersise()">
	<div id="create_new_excersise_button">
		<span></span>Create New Excersise
	</div>
</a>
</div>

