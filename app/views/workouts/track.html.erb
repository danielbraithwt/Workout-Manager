<%= stylesheet_link_tag "workouts_track.css" %>

<script>

var excersise_names = [];
var records = [];

<% @records.keys.each do |key| %>
	excersise_names.push("<%= key %>");
	records.push(<%= @records[key].to_json %>);
<% end %>

var range = <%= @range %>
var max_diffculty = <%= @max_diffculty %>

var highlighted = "";

$(document).ready( function() {
		
		// Make sure that the color range is split up over the correct range
		var max_range = excersise_names.length;
		if( max_range < 10 ) max_range = 10;
		

		// Color the key elements
		var i = 1;
		$("#key").children("div").each( function() {
				
				var rgb = HSBtoRGB((100.0/max_range) * i, 0.66, 0.68);
				$("#color_key_" + i).animate({backgroundColor: "rgb(" + parseInt(rgb[0]) + ", " + parseInt(rgb[1]) + ", " + parseInt(rgb[2]) + ")"});				
				i += 1;

				});
		
		var canvas = document.getElementById("canvas");

		// Set the cnavas size correctly, make the width fill the container div
		// and make the height equal to the width multiplted by Daniels Graph Constant ( 0.46153846 )
		canvas.width = $("body").width();
		if( canvas.width > 934 ) canvas.width = 934;
		canvas.height = parseInt(canvas.width * 0.46153846);

		draw();
	});


function draw()
{
	var c2d = document.getElementById("canvas").getContext("2d");
	c2d.fillStyle = "#FFFFFF";
	c2d.fillRect(0, 0, c2d.canvas.width, c2d.canvas.height);

	draw_axys(c2d);	

	draw_data(c2d);	

	highlighted = "";
}


function draw_axys(c2d)
{
	// Draw the x axys
	c2d.beginPath();
	c2d.lineWidth = 2
	c2d.moveTo(0, c2d.canvas.height - 20);
	c2d.lineTo(c2d.canvas.width, c2d.canvas.height - 20);
	c2d.stroke();	

	for( var i = 0; i < 1; i += 0.25 )
	{
		var x = 20;
		var y = 20 + i * ( c2d.canvas.height - 20 );

		// Draw the text
		c2d.fillStyle = "black";
		c2d.font = "10px Times Roman";
		c2d.fillText(parseInt(max_diffculty * (1 - parseInt(y-20)/c2d.canvas.height)), x - 20, y + 5);

		// Draw the lines
		c2d.beginPath();
		c2d.lineWidth = 2;
		c2d.strokeStyle = "rgba(0, 0, 0, 0.3)";
		c2d.moveTo(x, y);
		c2d.lineTo(c2d.canvas.width - 20, y);
		c2d.stroke();
	}
}

function draw_data(c2d)
{
	// Make sure that the color range is split up over the correct range
	var max_range = excersise_names.length;
	if( max_range < 10 ) max_range = 10;

	var day = 1;

	var positions = []
	for( var i = 0; i < records.length; i += 1 )
	{
		positions.push([20, c2d.canvas.height - 20]);
	}
	
	for( position = 20; position <= c2d.canvas.width && day <= 30; position += ((c2d.canvas.width - 40)/range) )
	{
		// Draw small point
		c2d.beginPath();
		c2d.strokeStyle = "#000000";
		c2d.lineWidth = 2;
		c2d.moveTo(position, c2d.canvas.height - 20);
		c2d.lineTo(position, c2d.canvas.height - 23);
		c2d.stroke();

		// Draw the text
		c2d.fillStyle = "black";
		c2d.font = "10px Times Roman";
		c2d.fillText(day, position - 2, c2d.canvas.height - 10 );

		for( var i = 0; i < records.length; i += 1 )
		{
			var rgb = HSBtoRGB((100/max_range) * i, 0.66, 0.68);

			for( var j = 0; j < records[i].length; j += 1 )
			{
				if( records[i][j][0] == day )
				{
					var y = 20 + ((c2d.canvas.height - 20.0) / max_diffculty) * (max_diffculty - records[i][j][1]);

					// Calculate the opacity for the line
					var opacity = 1;
					if( highlighted != "" && highlighted != excersise_names[i] ) opacity = 0.4;

					c2d.beginPath();
					c2d.strokeStyle = ("rgba(" + parseInt(rgb[0]) + ", " + parseInt(rgb[1]) + ", " + parseInt(rgb[2]) + ", " + opacity  + ")");
					c2d.lineWidth = 2;
					c2d.moveTo(positions[i][0], positions[i][1]);
					c2d.lineTo(position, y);
					c2d.stroke();

					positions[i] = [position, y];
				}	
			}
		}

		day += 1;
	}
}

function highlight(excersise_name)
{
	highlighted = excersise_name;
	draw();
}

function HSBtoRGB(h, s, l)
{
	var C = (1 - Math.abs(2 * l - 1)) * s;
	var Hp = h/60.0;
	var x = C * ( 1 - Math.abs(Hp%2 - 1));

	var r;
	var g;
	var b;

	if( Hp >= 0 && Hp < 1 )
	{
		r = C;
		g = x;
		b = 0;
	}
	else if( Hp >= 1 && Hp < 2 )
	{
		r = x;
		g = C;
		b = 0;
	}
	else if( Hp >= 2 && Hp < 3 )
	{
		r = 0;
		g = C;
		b = x;
	}
	else if( Hp >= 3 && Hp < 4 )
	{
		r = 0;
		g = x;
		b = C;
	}
	else if( Hp >= 4 && Hp < 5 )
	{
		r = x;
		g = 0;
		b = C;
	}	
	else if( Hp >= 5 && Hp < 6 )
	{
		r = C;
		g = 0;
		b = x;
	}

	m = l - (1/2.0) * C;

	return [255 * (r+m), 255 * (g+m), 255 * (b+m)];
}


</script>

<div id="container">
	<div id="key" onmouseout="draw()">
		<% i = 1 %>
		<% @records.keys.each do |key| %>
			<div id="excersise_key_<%= i %>" class="excersise_key" onmouseover="highlight('<%= key %>')">
				<div id="color_key_<%= i %>" class="color_key">

				</div>

				<div id="name_key_<%= i %>" class="name_key">
					<%= key %>
				</div>

				<div id="stats_key_<%= i %>" class="stats_key">
					Total Change: <%= @total_changes[i-1] %>
				</div>
			</div>

			<% i += 1 %>
		<% end %>
	</div>

	<div id="graph">
		<canvas id="canvas" width="650px" height="300px">
			Your browser doesnt support the HTML5 canvas
		</canvas>
	</div>
</div>
